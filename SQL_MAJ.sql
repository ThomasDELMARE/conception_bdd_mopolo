---------------------------------------------------------------
--        Script Oracle.  
---------------------------------------------------------------

------------------------------------------------------------
-- Table: Auteur
------------------------------------------------------------
CREATE TABLE AUTHOR(
	AUTID NUMBER NOT NULL,
	AUTNAME VARCHAR2 (32) NOT NULL,
	AUTSURNAME VARCHAR2 (32) NOT NULL,
	AUTBIRTH DATE NOT NULL,
	AUTCOUNTRY VARCHAR2 (32) NOT NULL,
	AUTBIO CLOB,
	CONSTRAINT AUTHOR_PK PRIMARY KEY (AUTID)
);

------------------------------------------------------------
-- Table: Éditeur
------------------------------------------------------------
CREATE TABLE EDITOR(
	EDNAME VARCHAR2 (32) NOT NULL,
	EDPHONE VARCHAR2 (32),
	EDMAIL VARCHAR2 (64),
	EDADRESS VARCHAR2 (256),
	CONSTRAINT EDITOR_PK PRIMARY KEY (EDNAME)
);

------------------------------------------------------------
-- Table: Adhérent
------------------------------------------------------------
CREATE TABLE ADHERENT(
	ADHID NUMBER NOT NULL,
	ADHNAME VARCHAR2 (32) NOT NULL,
	ADHSURNAME VARCHAR2 (32) NOT NULL,
	ADHBIRTH DATE NOT NULL,
	ADHPHONE VARCHAR2 (32) NOT NULL,
	ADHMAIL VARCHAR2 (64) NOT NULL,
	ADHADDRESS VARCHAR2 (256) NOT NULL,
	CONSTRAINT ADHERENT_PK PRIMARY KEY (ADHID)
);

------------------------------------------------------------
-- Table: Bibliothécaire
------------------------------------------------------------
CREATE TABLE EMPLOYEE(
	EMPID NUMBER NOT NULL,
	EMPNAME VARCHAR2 (32) NOT NULL,
	EMPSURNAME VARCHAR2 (32) NOT NULL,
	EMPBIRTH DATE NOT NULL,
	EMPPHONE VARCHAR2 (32) NOT NULL,
	EMPMAIL VARCHAR2 (64) NOT NULL,
	EMPADDRESS VARCHAR2 (256) NOT NULL,
	CONSTRAINT EMPLOYEE_PK PRIMARY KEY (EMPID)
);

------------------------------------------------------------
-- Table: Classification
------------------------------------------------------------
CREATE TABLE TYPE(
	TAG VARCHAR2 (16) NOT NULL,
	TAGDESC VARCHAR2 (256) NOT NULL,
	CONSTRAINT TYPE_PK PRIMARY KEY (TAG)
);

------------------------------------------------------------
-- Table: Ouvrage
------------------------------------------------------------
CREATE TABLE BOOK(
	ISBN NUMBER(10, 0) NOT NULL,
	TITLE VARCHAR2 (256) NOT NULL,
	PUBDATE NUMBER(4, 0),
	LANGUAGE VARCHAR2 (32) NOT NULL,
	TYPE VARCHAR2 (32) NOT NULL CONSTRAINT BOOK_CHECK_TYPE CHECK (
		Format IN ('Broché', 'Relié', 'Poche', 'Numérique', 'Audio')
	),
	EDITION NUMBER(10, 0) NOT NULL,
	DESCRIPTION CLOB,
	COVER BLOB,
	STOCK NUMBER(10, 0) NOT NULL CONSTRAINT BOOK_STOCK_NOT_NEGATIVE CHECK (STOCK >= 0),
	TAG VARCHAR2 (16) NOT NULL,
	EDNAME VARCHAR2 (32) NOT NULL,
	CONSTRAINT BOOK_PK PRIMARY KEY (ISBN),
,
	CONSTRAINT BOOK_TYPE_FK FOREIGN KEY (TAG) REFERENCES TYPE(TAG),
	CONSTRAINT BOOK_EDITOR0_FK FOREIGN KEY (EDNAME) REFERENCES EDITOR(EDNAME)
);

------------------------------------------------------------
-- Table: Emprunt
------------------------------------------------------------
CREATE TABLE EMPRUNT(
	ADHID NUMBER(10, 0) NOT NULL,
	EMPID_BIBLIOTHÉCAIRE NUMBER(10, 0) NOT NULL,
	ISBN NUMBER(10, 0) NOT NULL,
	STARTDATE DATE NOT NULL,
	ENDDATE DATE NOT NULL,
	ISBACK NUMBER (1) NOT NULL CONSTRAINT CHK_BOOLEAN_ISBACK CHECK (ISBACK IN (0, 1)),
	CONSTRAINT EMPRUNT_PK PRIMARY KEY (ADHID, EMPID_BIBLIOTHÉCAIRE, ISBN),
	CONSTRAINT EMPRUNT_ADHERENT_FK FOREIGN KEY (ADHID) REFERENCES ADHERENT(ADHID),
	CONSTRAINT EMPRUNT_EMPLOYEE0_FK FOREIGN KEY (EMPID_BIBLIOTHÉCAIRE) REFERENCES EMPLOYEE(EMPID),
	CONSTRAINT EMPRUNT_BOOK1_FK FOREIGN KEY (ISBN) REFERENCES BOOK(ISBN)
);

------------------------------------------------------------
-- Table: Réalise
------------------------------------------------------------
CREATE TABLE RÉALISE(
	ISBN NUMBER(10, 0) NOT NULL,
	AUTID NUMBER(10, 0) NOT NULL,
	ROLE VARCHAR2 (32) NOT NULL CONSTRAINT RÉALISE_CHECK_ROLE CHECK (Role IN ('écrivain', 'illustrateur', 'coauteur')),
	CONSTRAINT RÉALISE_PK PRIMARY KEY (ISBN, AUTID),
	CONSTRAINT RÉALISE_BOOK_FK FOREIGN KEY (ISBN) REFERENCES BOOK(ISBN),
	CONSTRAINT RÉALISE_AUTHOR0_FK FOREIGN KEY (AUTID) REFERENCES AUTHOR(AUTID)
);

CREATE SEQUENCE Seq_AUTHOR_AUTID START WITH 1 INCREMENT BY 1 NOCYCLE;
CREATE SEQUENCE Seq_ADHERENT_ADHID START WITH 1 INCREMENT BY 1 NOCYCLE;
CREATE SEQUENCE Seq_EMPLOYEE_EMPID START WITH 1 INCREMENT BY 1 NOCYCLE;

CREATE OR REPLACE TRIGGER AUTHOR_AUTID BEFORE
INSERT ON AUTHOR FOR EACH ROW
	WHEN (NEW.AUTID IS NULL) BEGIN
select Seq_AUTHOR_AUTID.NEXTVAL INTO :NEW.AUTID
from DUAL;
END;
/

CREATE OR REPLACE TRIGGER ADHERENT_ADHID BEFORE
INSERT ON ADHERENT FOR EACH ROW
	WHEN (NEW.ADHID IS NULL) BEGIN
select Seq_ADHERENT_ADHID.NEXTVAL INTO :NEW.ADHID
from DUAL;
END;
/

CREATE OR REPLACE TRIGGER EMPLOYEE_EMPID BEFORE
INSERT ON EMPLOYEE FOR EACH ROW
	WHEN (NEW.EMPID IS NULL) BEGIN
select Seq_EMPLOYEE_EMPID.NEXTVAL INTO :NEW.EMPID
from DUAL;
END;
/