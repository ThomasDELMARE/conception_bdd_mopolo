 ---------------------------------------------------------------
 --        Script Oracle.  
 ---------------------------------------------------------------


------------------------------------------------------------
-- Table: Editeur
------------------------------------------------------------
CREATE TABLE Editeur(
	Id         NUMBER NOT NULL ,
	Nom        CLOB  NOT NULL  ,
	Adresse    CLOB  NOT NULL  ,
	Telephone  CLOB  NOT NULL  ,
	CONSTRAINT Editeur_PK PRIMARY KEY (Id)
);

------------------------------------------------------------
-- Table: Personne
------------------------------------------------------------
CREATE TABLE Personne(
	ID              NUMBER NOT NULL ,
	Nom             CLOB  NOT NULL  ,
	Prenom          CLOB  NOT NULL  ,
	Date_naissance  DATE  NOT NULL  ,
	CONSTRAINT Personne_PK PRIMARY KEY (ID)
);

------------------------------------------------------------
-- Table: Adherent
------------------------------------------------------------
CREATE TABLE Adherent(
	ID              NUMBER(10,0)  NOT NULL  ,
	Adresse         CLOB  NOT NULL  ,
	Telephone       CLOB  NOT NULL  ,
	Nom             CLOB  NOT NULL  ,
	Prenom          CLOB  NOT NULL  ,
	Date_naissance  DATE  NOT NULL  ,
	CONSTRAINT Adherent_PK PRIMARY KEY (ID)

	,CONSTRAINT Adherent_Personne_FK FOREIGN KEY (ID) REFERENCES Personne(ID)
);

------------------------------------------------------------
-- Table: Personnel
------------------------------------------------------------
CREATE TABLE Personnel(
	ID              NUMBER(10,0)  NOT NULL  ,
	Telephone       CLOB  NOT NULL  ,
	Nom             CLOB  NOT NULL  ,
	Prenom          CLOB  NOT NULL  ,
	Date_naissance  DATE  NOT NULL  ,
	CONSTRAINT Personnel_PK PRIMARY KEY (ID)

	,CONSTRAINT Personnel_Personne_FK FOREIGN KEY (ID) REFERENCES Personne(ID)
);

------------------------------------------------------------
-- Table: Auteur
------------------------------------------------------------
CREATE TABLE Auteur(
	ID              NUMBER(10,0)  NOT NULL  ,
	Nationalite     CLOB  NOT NULL  ,
	Biographie      CLOB  NOT NULL  ,
	Nom             CLOB  NOT NULL  ,
	Prenom          CLOB  NOT NULL  ,
	Date_naissance  DATE  NOT NULL  ,
	CONSTRAINT Auteur_PK PRIMARY KEY (ID)

	,CONSTRAINT Auteur_Personne_FK FOREIGN KEY (ID) REFERENCES Personne(ID)
);

------------------------------------------------------------
-- Table: Illustrateur
------------------------------------------------------------
CREATE TABLE Illustrateur(
	ID              NUMBER(10,0)  NOT NULL  ,
	Nationalite     CLOB  NOT NULL  ,
	Biographie      CLOB  NOT NULL  ,
	Nom             CLOB  NOT NULL  ,
	Prenom          CLOB  NOT NULL  ,
	Date_naissance  DATE  NOT NULL  ,
	CONSTRAINT Illustrateur_PK PRIMARY KEY (ID)

	,CONSTRAINT Illustrateur_Personne_FK FOREIGN KEY (ID) REFERENCES Personne(ID)
);

------------------------------------------------------------
-- Table: Emprunt
------------------------------------------------------------
CREATE TABLE Emprunt(
	Num         NUMBER (10,0) NOT NULL  ,
	Date_debut  DATE  NOT NULL  ,
	Date_fin    DATE  NOT NULL  ,
	Duree       NUMBER(10,0)  NOT NULL  ,
	Recupere    NUMBER (1) NOT NULL  ,
	Retourne    NUMBER (1) NOT NULL  ,
	Nb_livre    NUMBER(10,0)  NOT NULL  ,
	ID          NUMBER(10,0)   ,
	CONSTRAINT Emprunt_PK PRIMARY KEY (Num),
	CONSTRAINT CHK_BOOLEAN_Recupere CHECK (Recupere IN (0,1)),
	CONSTRAINT CHK_BOOLEAN_Retourne CHECK (Retourne IN (0,1))

	,CONSTRAINT Emprunt_Personnel_FK FOREIGN KEY (ID) REFERENCES Personnel(ID)
);

------------------------------------------------------------
-- Table: Classification
------------------------------------------------------------
CREATE TABLE Classification(
	Id       CHAR (5)  NOT NULL  ,
	Libelle  CLOB  NOT NULL  ,
	CONSTRAINT Classification_PK PRIMARY KEY (Id)
);

------------------------------------------------------------
-- Table: Ouvrage
------------------------------------------------------------
CREATE TABLE Ouvrage(
	ISBN                 NUMBER(10,0)  NOT NULL  ,
	Genre                CLOB   ,
	Format               CLOB  NOT NULL  ,
	Langue               CLOB  NOT NULL  ,
	Date_parution        DATE  NOT NULL  ,
	Disponibilite        NUMBER (1) ,
	Nb_exemplaire_dispo  NUMBER(10,0)   ,
	Nb_exemplaire_total  NUMBER(10,0)  NOT NULL  ,
	Id                   NUMBER(10,0)  NOT NULL  ,
	Id_Classification    CHAR (5)  NOT NULL  ,
	CONSTRAINT Ouvrage_PK PRIMARY KEY (ISBN),
	CONSTRAINT CHK_BOOLEAN_Disponibilite CHECK (Disponibilite IN (0,1))

	,CONSTRAINT Ouvrage_Editeur_FK FOREIGN KEY (Id) REFERENCES Editeur(Id)
	,CONSTRAINT Ouvrage_Classification0_FK FOREIGN KEY (Id_Classification) REFERENCES Classification(Id)
);

------------------------------------------------------------
-- Table: Emprunter
------------------------------------------------------------
CREATE TABLE Emprunter(
	ID    NUMBER(10,0)  NOT NULL  ,
	ISBN  NUMBER(10,0)  NOT NULL  ,
	Num   NUMBER (10,0) NOT NULL  ,
	CONSTRAINT Emprunter_PK PRIMARY KEY (ID,ISBN,Num)

	,CONSTRAINT Emprunter_Adherent_FK FOREIGN KEY (ID) REFERENCES Adherent(ID)
	,CONSTRAINT Emprunter_Ouvrage0_FK FOREIGN KEY (ISBN) REFERENCES Ouvrage(ISBN)
	,CONSTRAINT Emprunter_Emprunt1_FK FOREIGN KEY (Num) REFERENCES Emprunt(Num)
);

------------------------------------------------------------
-- Table: Ecrire
------------------------------------------------------------
CREATE TABLE Ecrire(
	ID    NUMBER(10,0)  NOT NULL  ,
	ISBN  NUMBER(10,0)  NOT NULL  ,
	CONSTRAINT Ecrire_PK PRIMARY KEY (ID,ISBN)

	,CONSTRAINT Ecrire_Auteur_FK FOREIGN KEY (ID) REFERENCES Auteur(ID)
	,CONSTRAINT Ecrire_Ouvrage0_FK FOREIGN KEY (ISBN) REFERENCES Ouvrage(ISBN)
);

------------------------------------------------------------
-- Table: Illustrer
------------------------------------------------------------
CREATE TABLE Illustrer(
	ID    NUMBER(10,0)  NOT NULL  ,
	ISBN  NUMBER(10,0)  NOT NULL  ,
	CONSTRAINT Illustrer_PK PRIMARY KEY (ID,ISBN)

	,CONSTRAINT Illustrer_Illustrateur_FK FOREIGN KEY (ID) REFERENCES Illustrateur(ID)
	,CONSTRAINT Illustrer_Ouvrage0_FK FOREIGN KEY (ISBN) REFERENCES Ouvrage(ISBN)
);





CREATE SEQUENCE Seq_Editeur_Id START WITH 1 INCREMENT BY 1 NOCYCLE;
CREATE SEQUENCE Seq_Personne_ID START WITH 1 INCREMENT BY 1 NOCYCLE;


CREATE OR REPLACE TRIGGER Editeur_Id
	BEFORE INSERT ON Editeur 
  FOR EACH ROW 
	WHEN (NEW.Id IS NULL) 
	BEGIN
		 select Seq_Editeur_Id.NEXTVAL INTO :NEW.Id from DUAL; 
	END;
CREATE OR REPLACE TRIGGER Personne_ID
	BEFORE INSERT ON Personne 
  FOR EACH ROW 




	=======================================================================
	   Désolé, il faut activer cette version pour voir la suite du script ! 
	=======================================================================
